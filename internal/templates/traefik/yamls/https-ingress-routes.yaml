{{- if .Values.app.isAccessible }}
{{- if .Values.app.ingress.https }}
{{- range $i, $https := .Values.app.ingress.https }}
apiVersion: traefik.containo.us/v1alpha1
kind: Middleware
metadata:
  name: {{ $https.uniqueName }}-redirect-scheme
spec:
  redirectScheme:
    scheme: https
    permanent: true
---
apiVersion: traefik.containo.us/v1alpha1
kind: IngressRoute
metadata:
  name: {{ $https.uniqueName }}
  annotations:
    {{- if $.Values.ingressController.className }}
    kubernetes.io/ingress.class: {{ $.Values.ingressController.className | quote }}
    {{- end }}
    {{- if $.Values.ingressController.clusterIssuer }}
    cert-manager.io/cluster-issuer: {{ $.Values.ingressController.clusterIssuer | quote }}
    {{- end }}
    {{- $data := dict "kind" "IngressRoute" "apiVersion" "traefik.containo.us/v1alpha1" "metadataItems" $.Values.app.metadataAnnotations }}
    {{- include "ketch.renderMetadata" $data | nindent 4 }}
  labels:
    {{- if $.Values.app.id }}
    {{ $.Values.app.group }}/app-id: {{ $.Values.app.id | quote }}
    {{- end }}
    {{ $.Values.app.group }}/app-name: {{ $.Values.app.name | quote }}
    {{- with (last $.Values.app.deployments) }}
    {{ $.Values.app.group }}/app-deployment-version: {{ .version | quote }}
    {{- end }}
spec:
  entryPoints:
    - websecure
  routes:
  - match: Host("{{ $https.cname }}")
    kind: Rule
    services:
    {{- range $_, $deployment := $.Values.app.deployments }}
    {{- range $_, $process := $deployment.processes }}
    {{- if $process.routable }}
    {{- if gt $deployment.routingSettings.weight 0.0}}
    - name: {{ empty $.Values.app.id | ternary $.Values.app.name (printf "%s-%s" $.Values.app.name $.Values.app.id) }}-{{ $process.name}}-{{ $deployment.version }}
      port: {{ $process.publicServicePort }}
      weight: {{$deployment.routingSettings.weight}}
     {{- end }}
     {{- end }}
     {{- end }}
     {{- end }}
  tls:
    secretName: {{ $https.secretName }}
---
apiVersion: traefik.containo.us/v1alpha1
kind: IngressRoute
metadata:
  name: {{ $https.uniqueName }}-http-redirect
  annotations:
    {{- if $.Values.ingressController.className }}
    kubernetes.io/ingress.class: {{ $.Values.ingressController.className | quote }}
    {{- end }}
    {{- if $.Values.ingressController.clusterIssuer }}
    cert-manager.io/cluster-issuer: {{ $.Values.ingressController.clusterIssuer | quote }}
    {{- end }}
    {{- $data := dict "kind" "IngressRoute" "apiVersion" "traefik.containo.us/v1alpha1" "metadataItems" $.Values.app.metadataAnnotations }}
    {{- include "ketch.renderMetadata" $data | nindent 4 }}
  labels:
    {{- if $.Values.app.id }}
    {{ $.Values.app.group }}/app-id: {{ $.Values.app.id | quote }}
    {{- end }}
    {{ $.Values.app.group }}/app-name: {{ $.Values.app.name | quote }}
    {{- with (last $.Values.app.deployments) }}
    {{ $.Values.app.group }}/app-deployment-version: {{ .version | quote }}
    {{- end }}
spec:
  entryPoints:
    - web
  routes:
    - match: Host("{{ $https.cname }}")
      kind: Rule
      middlewares:
        - name: {{ $https.uniqueName }}-redirect-scheme
      services:
      {{- range $_, $deployment := $.Values.app.deployments }}
      {{- range $_, $process := $deployment.processes }}
      {{- if $process.routable }}
      {{- if gt $deployment.routingSettings.weight 0.0}}
      - name: {{ empty $.Values.app.id | ternary $.Values.app.name (printf "%s-%s" $.Values.app.name $.Values.app.id) }}-{{ $process.name }}-{{ $deployment.version }}
        port: {{ $process.publicServicePort }}
        weight: {{$deployment.routingSettings.weight}}
      {{- end }}
      {{- end }}
      {{- end }}
      {{- end }}
---
{{- end }}
{{- end }}
{{- end }}
