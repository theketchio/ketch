---
# Source: dashboard/templates/gateway_service.yaml
apiVersion: v1
kind: Service
metadata:
  labels:
    shipa.io/app-name: "dashboard"
    shipa.io/is-isolated-run: "false"
  name: app-dashboard
spec:
  type: ClusterIP
  ports:
    - name: http-default-1
      port: 9091
      protocol: TCP
      targetPort: 9091
  selector:
    shipa.io/app-name: "dashboard"
    shipa.io/app-process: "web"
    shipa.io/app-deployment-version: "4"
    shipa.io/is-isolated-run: "false"
---
# Source: dashboard/templates/service.yaml
apiVersion: v1
kind: Service
metadata:
  labels:
    shipa.io/app-name: "dashboard"
    shipa.io/app-process: "web"
    shipa.io/app-deployment-version: "3"
    shipa.io/is-isolated-run: "false"
  name: dashboard-web-3
spec:
  type: ClusterIP
  ports:
    - name: http-default-1
      port: 9090
      protocol: TCP
      targetPort: 9090
  selector:
    shipa.io/app-name: "dashboard"
    shipa.io/app-process: "web"
    shipa.io/app-deployment-version: "3"
    shipa.io/is-isolated-run: "false"
---
# Source: dashboard/templates/service.yaml
apiVersion: v1
kind: Service
metadata:
  labels:
    shipa.io/app-name: "dashboard"
    shipa.io/app-process: "worker"
    shipa.io/app-deployment-version: "3"
    shipa.io/is-isolated-run: "false"
  name: dashboard-worker-3
spec:
  type: ClusterIP
  ports:
    - name: http-default-1
      port: 9090
      protocol: TCP
      targetPort: 9090
  selector:
    shipa.io/app-name: "dashboard"
    shipa.io/app-process: "worker"
    shipa.io/app-deployment-version: "3"
    shipa.io/is-isolated-run: "false"
---
# Source: dashboard/templates/service.yaml
apiVersion: v1
kind: Service
metadata:
  labels:
    shipa.io/app-name: "dashboard"
    shipa.io/app-process: "web"
    shipa.io/app-deployment-version: "4"
    shipa.io/is-isolated-run: "false"
  annotations:
    theketch.io/test-annotation: "test-annotation-value"
  name: dashboard-web-4
spec:
  type: ClusterIP
  ports:
    - name: http-default-1
      port: 9091
      protocol: TCP
      targetPort: 9091
  selector:
    shipa.io/app-name: "dashboard"
    shipa.io/app-process: "web"
    shipa.io/app-deployment-version: "4"
    shipa.io/is-isolated-run: "false"
---
# Source: dashboard/templates/service.yaml
apiVersion: v1
kind: Service
metadata:
  labels:
    shipa.io/app-name: "dashboard"
    shipa.io/app-process: "worker"
    shipa.io/app-deployment-version: "4"
    shipa.io/is-isolated-run: "false"
  name: dashboard-worker-4
spec:
  type: ClusterIP
  ports:
    - name: http-default-1
      port: 9091
      protocol: TCP
      targetPort: 9091
  selector:
    shipa.io/app-name: "dashboard"
    shipa.io/app-process: "worker"
    shipa.io/app-deployment-version: "4"
    shipa.io/is-isolated-run: "false"
---
# Source: dashboard/templates/deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    shipa.io/app-name: "dashboard"
    shipa.io/app-process: "web"
    shipa.io/app-process-replicas: "3"
    shipa.io/app-deployment-version: "3"
    shipa.io/is-isolated-run: "false"
    theketch.io/test-label: "test-label-value"
    theketch.io/test-label-all: "test-label-value-all"
  name: dashboard-web-3
spec:
  replicas: 3
  selector:
    matchLabels:
      app: "dashboard"
      version: "3"
      shipa.io/app-name: "dashboard"
      shipa.io/app-process: "web"
      shipa.io/app-deployment-version: "3"
      shipa.io/is-isolated-run: "false"
  template:
    metadata:
      labels:
        app: "dashboard"
        version: "3"
        shipa.io/app-name: "dashboard"
        shipa.io/app-process: "web"
        shipa.io/app-deployment-version: "3"
        shipa.io/is-isolated-run: "false"
    spec:
      containers:
        - name: dashboard-web-3
          command: ["python"]
          env:
            - name: TEST_API_KEY
              value: SECRET
            - name: TEST_API_URL
              value: example.com
            - name: port
              value: "9090"
            - name: PORT
              value: "9090"
            - name: PORT_web
              value: "9090"
            - name: VAR
              value: VALUE
          image: shipasoftware/go-app:v1
          ports:
          - containerPort: 9090
          volumeMounts:
            - mountPath: /test-ebs
              name: test-volume
          resources:
            limits:
              cpu: 5Gi
              memory: 5300m
            requests:
              cpu: 5Gi
              memory: 5300m
      imagePullSecrets:
            - name: registry-secret
            - name: private-registry-secret
      volumes:
            - awsElasticBlockStore:
                fsType: ext4
                volumeID: volume-id
              name: test-volume
---
# Source: dashboard/templates/deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    shipa.io/app-name: "dashboard"
    shipa.io/app-process: "worker"
    shipa.io/app-process-replicas: "1"
    shipa.io/app-deployment-version: "3"
    shipa.io/is-isolated-run: "false"
    theketch.io/test-label-all: "test-label-value-all"
  name: dashboard-worker-3
spec:
  replicas: 1
  selector:
    matchLabels:
      app: "dashboard"
      version: "3"
      shipa.io/app-name: "dashboard"
      shipa.io/app-process: "worker"
      shipa.io/app-deployment-version: "3"
      shipa.io/is-isolated-run: "false"
  template:
    metadata:
      labels:
        app: "dashboard"
        version: "3"
        shipa.io/app-name: "dashboard"
        shipa.io/app-process: "worker"
        shipa.io/app-deployment-version: "3"
        shipa.io/is-isolated-run: "false"
    spec:
      containers:
        - name: dashboard-worker-3
          command: ["celery"]
          env:
            - name: port
              value: "9090"
            - name: PORT
              value: "9090"
            - name: PORT_worker
              value: "9090"
            - name: VAR
              value: VALUE
          image: shipasoftware/go-app:v1
          ports:
          - containerPort: 9090
      imagePullSecrets:
            - name: registry-secret
            - name: private-registry-secret
---
# Source: dashboard/templates/deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    shipa.io/app-name: "dashboard"
    shipa.io/app-process: "web"
    shipa.io/app-process-replicas: "3"
    shipa.io/app-deployment-version: "4"
    shipa.io/is-isolated-run: "false"
    theketch.io/test-label-all: "test-label-value-all"
  name: dashboard-web-4
spec:
  replicas: 3
  selector:
    matchLabels:
      app: "dashboard"
      version: "4"
      shipa.io/app-name: "dashboard"
      shipa.io/app-process: "web"
      shipa.io/app-deployment-version: "4"
      shipa.io/is-isolated-run: "false"
  template:
    metadata:
      labels:
        app: "dashboard"
        version: "4"
        shipa.io/app-name: "dashboard"
        shipa.io/app-process: "web"
        shipa.io/app-deployment-version: "4"
        shipa.io/is-isolated-run: "false"
    spec:
      containers:
        - name: dashboard-web-4
          command: ["python"]
          env:
            - name: port
              value: "9091"
            - name: PORT
              value: "9091"
            - name: PORT_web
              value: "9091"
            - name: VAR
              value: VALUE
          image: shipasoftware/go-app:v2
          ports:
          - containerPort: 9091
      imagePullSecrets:
            - name: default-image-pull-secret
---
# Source: dashboard/templates/deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    shipa.io/app-name: "dashboard"
    shipa.io/app-process: "worker"
    shipa.io/app-process-replicas: "1"
    shipa.io/app-deployment-version: "4"
    shipa.io/is-isolated-run: "false"
    theketch.io/test-label-all: "test-label-value-all"
  name: dashboard-worker-4
spec:
  replicas: 1
  selector:
    matchLabels:
      app: "dashboard"
      version: "4"
      shipa.io/app-name: "dashboard"
      shipa.io/app-process: "worker"
      shipa.io/app-deployment-version: "4"
      shipa.io/is-isolated-run: "false"
  template:
    metadata:
      labels:
        app: "dashboard"
        version: "4"
        shipa.io/app-name: "dashboard"
        shipa.io/app-process: "worker"
        shipa.io/app-deployment-version: "4"
        shipa.io/is-isolated-run: "false"
    spec:
      containers:
        - name: dashboard-worker-4
          command: ["celery"]
          env:
            - name: port
              value: "9091"
            - name: PORT
              value: "9091"
            - name: PORT_worker
              value: "9091"
            - name: VAR
              value: VALUE
          image: shipasoftware/go-app:v2
          ports:
          - containerPort: 9091
      imagePullSecrets:
            - name: default-image-pull-secret
---
# Source: dashboard/templates/certificate.yaml
apiVersion: cert-manager.io/v1
kind: Certificate
metadata:
  name: "dashboard-cname-theketch-io"
spec:
  secretName: "dashboard-cname-theketch-io"
  dnsNames:
    - theketch.io
  issuerRef:
    name: letsencrypt-production
    kind: ClusterIssuer
---
# Source: dashboard/templates/certificate.yaml
apiVersion: cert-manager.io/v1
kind: Certificate
metadata:
  name: "dashboard-cname-app-theketch-io"
spec:
  secretName: "dashboard-cname-app-theketch-io"
  dnsNames:
    - app.theketch.io
  issuerRef:
    name: letsencrypt-production
    kind: ClusterIssuer
---
# Source: dashboard/templates/http-ingress-route.yaml
apiVersion: traefik.containo.us/v1alpha1
kind: IngressRoute
metadata:
  name: dashboard-http-ingressroute
  annotations:
    kubernetes.io/ingress.class: "ingress-class"
    cert-manager.io/cluster-issuer: "letsencrypt-production"
    theketch.io/metadata-item-kind: IngressRoute
    theketch.io/metadata-item-apiVersion: traefik.containo.us/v1alpha1
    theketch.io/ingress-route-annotation: "test-ingress"
  labels:
    shipa.io/app-name: "dashboard"
spec:
  entryPoints:
    - web
  routes:
  - match: Host("dashboard.10.10.10.10.shipa.cloud")
    kind: Rule
    services:
    - name: dashboard-web-3
      port: 9090
      weight: 30
    - name: dashboard-web-4
      port: 9091
      weight: 70
---
# Source: dashboard/templates/https-ingress-routes.yaml
apiVersion: traefik.containo.us/v1alpha1
kind: IngressRoute
metadata:
  name: dashboard-https-theketch-io
  annotations:
    kubernetes.io/ingress.class: "ingress-class"
    cert-manager.io/cluster-issuer: "letsencrypt-production"
    theketch.io/metadata-item-kind: IngressRoute
    theketch.io/metadata-item-apiVersion: traefik.containo.us/v1alpha1
    theketch.io/ingress-route-annotation: "test-ingress"
  labels:
    shipa.io/app-name: "dashboard"
spec:
  entryPoints:
    - websecure
  routes:
  - match: Host("theketch.io")
    kind: Rule
    services:
    - name: dashboard-web-3
      port: 9090
      weight: 30
    - name: dashboard-web-4
      port: 9091
      weight: 70
  tls:
    secretName: dashboard-cname-theketch-io
---
# Source: dashboard/templates/https-ingress-routes.yaml
apiVersion: traefik.containo.us/v1alpha1
kind: IngressRoute
metadata:
  name: dashboard-https-theketch-io-http-redirect
  annotations:
    kubernetes.io/ingress.class: "ingress-class"
    cert-manager.io/cluster-issuer: "letsencrypt-production"
    theketch.io/metadata-item-kind: IngressRoute
    theketch.io/metadata-item-apiVersion: traefik.containo.us/v1alpha1
    theketch.io/ingress-route-annotation: "test-ingress"
  labels:
    shipa.io/app-name: "dashboard"
spec:
  entryPoints:
    - web
  routes:
    - match: Host("theketch.io")
      kind: Rule
      middlewares:
        - name: dashboard-https-theketch-io-redirect-scheme
      services:
      - name: dashboard-web-3
        port: 9090
        weight: 30
      - name: dashboard-web-4
        port: 9091
        weight: 70
---
# Source: dashboard/templates/https-ingress-routes.yaml
apiVersion: traefik.containo.us/v1alpha1
kind: IngressRoute
metadata:
  name: dashboard-https-app-theketch-io
  annotations:
    kubernetes.io/ingress.class: "ingress-class"
    cert-manager.io/cluster-issuer: "letsencrypt-production"
    theketch.io/metadata-item-kind: IngressRoute
    theketch.io/metadata-item-apiVersion: traefik.containo.us/v1alpha1
    theketch.io/ingress-route-annotation: "test-ingress"
  labels:
    shipa.io/app-name: "dashboard"
spec:
  entryPoints:
    - websecure
  routes:
  - match: Host("app.theketch.io")
    kind: Rule
    services:
    - name: dashboard-web-3
      port: 9090
      weight: 30
    - name: dashboard-web-4
      port: 9091
      weight: 70
  tls:
    secretName: dashboard-cname-app-theketch-io
---
# Source: dashboard/templates/https-ingress-routes.yaml
apiVersion: traefik.containo.us/v1alpha1
kind: IngressRoute
metadata:
  name: dashboard-https-app-theketch-io-http-redirect
  annotations:
    kubernetes.io/ingress.class: "ingress-class"
    cert-manager.io/cluster-issuer: "letsencrypt-production"
    theketch.io/metadata-item-kind: IngressRoute
    theketch.io/metadata-item-apiVersion: traefik.containo.us/v1alpha1
    theketch.io/ingress-route-annotation: "test-ingress"
  labels:
    shipa.io/app-name: "dashboard"
spec:
  entryPoints:
    - web
  routes:
    - match: Host("app.theketch.io")
      kind: Rule
      middlewares:
        - name: dashboard-https-app-theketch-io-redirect-scheme
      services:
      - name: dashboard-web-3
        port: 9090
        weight: 30
      - name: dashboard-web-4
        port: 9091
        weight: 70
---
# Source: dashboard/templates/https-ingress-routes.yaml
apiVersion: traefik.containo.us/v1alpha1
kind: IngressRoute
metadata:
  name: dashboard-https-darkweb-theketch-io
  annotations:
    kubernetes.io/ingress.class: "ingress-class"
    cert-manager.io/cluster-issuer: "letsencrypt-production"
    theketch.io/metadata-item-kind: IngressRoute
    theketch.io/metadata-item-apiVersion: traefik.containo.us/v1alpha1
    theketch.io/ingress-route-annotation: "test-ingress"
  labels:
    shipa.io/app-name: "dashboard"
spec:
  entryPoints:
    - websecure
  routes:
  - match: Host("darkweb.theketch.io")
    kind: Rule
    services:
    - name: dashboard-web-3
      port: 9090
      weight: 30
    - name: dashboard-web-4
      port: 9091
      weight: 70
  tls:
    secretName: darkweb-ssl
---
# Source: dashboard/templates/https-ingress-routes.yaml
apiVersion: traefik.containo.us/v1alpha1
kind: IngressRoute
metadata:
  name: dashboard-https-darkweb-theketch-io-http-redirect
  annotations:
    kubernetes.io/ingress.class: "ingress-class"
    cert-manager.io/cluster-issuer: "letsencrypt-production"
    theketch.io/metadata-item-kind: IngressRoute
    theketch.io/metadata-item-apiVersion: traefik.containo.us/v1alpha1
    theketch.io/ingress-route-annotation: "test-ingress"
  labels:
    shipa.io/app-name: "dashboard"
spec:
  entryPoints:
    - web
  routes:
    - match: Host("darkweb.theketch.io")
      kind: Rule
      middlewares:
        - name: dashboard-https-darkweb-theketch-io-redirect-scheme
      services:
      - name: dashboard-web-3
        port: 9090
        weight: 30
      - name: dashboard-web-4
        port: 9091
        weight: 70
---
# Source: dashboard/templates/https-ingress-routes.yaml
apiVersion: traefik.containo.us/v1alpha1
kind: Middleware
metadata:
  name: dashboard-https-theketch-io-redirect-scheme
spec:
  redirectScheme:
    scheme: https
    permanent: true
---
# Source: dashboard/templates/https-ingress-routes.yaml
apiVersion: traefik.containo.us/v1alpha1
kind: Middleware
metadata:
  name: dashboard-https-app-theketch-io-redirect-scheme
spec:
  redirectScheme:
    scheme: https
    permanent: true
---
# Source: dashboard/templates/https-ingress-routes.yaml
apiVersion: traefik.containo.us/v1alpha1
kind: Middleware
metadata:
  name: dashboard-https-darkweb-theketch-io-redirect-scheme
spec:
  redirectScheme:
    scheme: https
    permanent: true